[server]
# CalDAV server hostnames separated by a comma
# IPv4 syntax: address:port
# IPv6 syntax: [address]:port
# IPv6 adresses are configured to only allow IPv6 connections
hosts = 0.0.0.0:5232
# Daemon flag
daemon = False
# File storing the PID in daemon mode
pid =
# SSL flag, enable HTTPS protocol
ssl = False
# SSL certificate path
# certificate = /etc/apache2/ssl/server.crt
# SSL private key
# key = /etc/apache2/ssl/server.key
# Reverse DNS to resolve client address in logs
dns_lookup = True
# Root URL of Radicale (starting and ending with a slash)
base_prefix = /
# Message displayed in the client when a password is needed
realm = Radicale - Password Required lol


[encoding]
# Encoding for responding requests
request = utf-8
# Encoding for storing local collections
stock = utf-8


[auth]
# Authentication method
# Value: None | htpasswd | IMAP | LDAP | PAM | courier | http
type = LDAP

# Usernames used for public collections, separated by a comma
# AuthUserFile = ${buildout:directory}/etc/users
# Usernames used for private collections, separated by a comma
# private_users = pippo
# Htpasswd filename
# htpasswd_filename = ${buildout:directory}/etc/users
# Htpasswd encryption method
# Value: plain | sha1 | crypt
# htpasswd_encryption = plain

# LDAP server URL, with protocol and port
ldap_url = ldap://127.0.0.1:389/
# LDAP base path
ldap_base = o=Company,dc=ldap,dc=abstract,dc=it
# LDAP login attribute
ldap_attribute = uid
# LDAP filter string
# placed as X in a query of the form (&(...)X)
# example: (objectCategory=Person)(objectClass=User)(memberOf=cn=calenderusers,ou=users,dc=example,dc=org)
# leave empty if no additional filter is needed
ldap_filter = (objectClass=organizationalPerson)

# LDAP dn for initial login, used if LDAP server does not allow anonymous searches
# Leave empty if searches are anonymous
# ldap_binddn =
# LDAP password for initial login, used with ldap_binddn
# ldap_password =
# LDAP scope of the search
ldap_scope = SUBTREE


[rights]
# Rights management method
# Value: None | owner_only | owner_write | from_file
type = owner_write

# File for rights management from_file
# file = ~/.config/radicale/rights


[storage]
# Storage backend
type = filesystem

# Folder for storing local collections, created if not present
filesystem_folder = ${buildout:directory}/var/collections


[logging]
# Logging configuration file
config = ${buildout:directory}/etc/logging.cfg
# Set the default logging level to debug
debug = False
# Store all environment variables (including those set in the shell)
full_environment = False
